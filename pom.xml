<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.sf.jabref</groupId>
	<artifactId>jabref</artifactId>
	<packaging>jar</packaging>
	<version>2.9</version>


	<name>JabRef</name>
	<description>Reference Manager</description>
	<url>http://jabref.sourceforge.net/</url>
	<inceptionYear>2003</inceptionYear>

	<licenses>
		<license>
			<name>GNU General Public License (GPL) 2</name>
			<url>http://www.gnu.org/licenses/gpl-2.0.txt</url>
		</license>
	</licenses>

        <distributionManagement>
                <repository>
                        <id>IroniaCorp</id>
                        <url>dav:https://www.ironiacorp.com/repo/maven2</url>
                </repository>
        </distributionManagement>


	<repositories>
                <repository>
                        <id>IroniaCorp</id>
                        <url>http://www.ironiacorp.com/repo/maven2</url>
                        <releases>
                                <updatePolicy>never</updatePolicy>
                        </releases>
                </repository>

		<repository>
			<id>java.net</id>
			<url>https://maven.java.net/content/groups/public/</url>
		</repository>

		<repository>
			<id>CodeHaus</id>
			<url>http://repository.codehaus.org/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>[4.11,)</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>2.7.7</version>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>3.5</version>
		</dependency>
		
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-common</artifactId>
			<version>1.6.0</version>
		</dependency>

		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-looks</artifactId>
			<version>2.5.3</version>
		</dependency>

		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-forms</artifactId>
			<version>1.7.1</version>
		</dependency>

		<dependency>
			<groupId>net.java.dev.glazedlists</groupId>
			<artifactId>glazedlists_java15</artifactId>
			<version>1.8.0</version>
		</dependency>

		<dependency>
			<groupId>spin</groupId>
			<artifactId>spin</artifactId>
			<version>1.5</version>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>[1.1.3,)</version>
		</dependency>

		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>jempbox</artifactId>
			<version>[1.7.0,)</version>
		</dependency>

		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>[1.7.1,1.8.99)</version>
		</dependency>

		<dependency>
			<groupId>com.michaelbaranov</groupId>
			<artifactId>microba</artifactId>
			<version>0.4.4.3</version>
		</dependency>

		<!-- Java Plugin Framework -->
		<dependency>
			<groupId>net.sf.jpf</groupId>
			<artifactId>jpf</artifactId>
			<version>[1.5,)</version>
		</dependency>
	
		<dependency>
			<groupId>net.sf.jpf</groupId>
			<artifactId>jpf-boot</artifactId>
			<version>[1.5,)</version>
		</dependency>
		
		<!-- Code generator for JPF (Java Plugin Framework). There is an utility class we need from here -->
		<dependency>
			<groupId>net.sf.jabref</groupId>
			<artifactId>jpfcodegen</artifactId>
			<version>0.4</version>
		</dependency>
		
		<!-- OpenOffice/LibreOffice UNO libraries -->
		
		
		
		<dependency>
			<groupId>gnu.dtools.ritopt</groupId>
			<artifactId>ritopt</artifactId>
			<version>[0.2.1,)</version>
		</dependency>
		<dependency>
			<groupId>ironiacorp</groupId>
			<artifactId>commons-computer</artifactId>
			<version>5.0.0-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<directory>target</directory>

		<sourceDirectory>${project.basedir}/src</sourceDirectory>
		<testSourceDirectory>${project.basedir}/test</testSourceDirectory>

		<outputDirectory>${project.build.directory}/classes</outputDirectory>
		<testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>

		<resources>
			<resource>
				<!--
				<targetPath>resource</targetPath>
				-->
				<filtering>false</filtering>
				<directory>${project.basedir}/resource</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>

			<resource>
				<targetPath>plugins</targetPath>
				<filtering>false</filtering>
				<directory>${project.basedir}/plugins</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>
			
		</resources>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>2.4</version>
			</extension>

			<extension>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-nop</artifactId>
				<version>1.6.6</version>
			</extension>
		</extensions>


		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<fork>true</fork>
					<meminitial>128m</meminitial>
					<maxmem>512m</maxmem>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
					<finalName>jabref</finalName>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<archive>
						<manifest>
							<mainClass>net.sf.jabref.JabRef</mainClass>
							<packageName>jabref</packageName>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<!--
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
					-->
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>net.sf.jabref.JabRef</mainClass>
						</manifest>
					</archive>
				</configuration>
			        <executions>
					<execution>
						<phase>package</phase>
			            		<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>antlr-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<grammars>Parser.g,TreeParser.g,Lexer.g</grammars>
					<sourceDirectory>${project.build.sourceDirectory}/net/sf/jabref/search/</sourceDirectory>
					<outputDirectory>${project.build.sourceDirectory}</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr3-maven-plugin</artifactId>
<!--
				<version>1.1-SNAPSHOT</version>
-->
				<version>3.5.2</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>antlr</goal>
						</goals>
						<configuration>
							<sourceDirectory>${project.build.sourceDirectory}/net/sf/jabref/bst</sourceDirectory>
							<outputDirectory>${project.build.sourceDirectory}/net/sf/jabref/bst</outputDirectory>
							<includes>
								<include>**/*.g</include>
								<include>**/*.g3</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>net.sf.jabref.plugin.util.CodeGenerator</mainClass>
							<arguments>
								<argument>${project.basedir}/plugins</argument>
							</arguments>
							<includePluginDependencies>true</includePluginDependencies>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.sourceDirectory}</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${project.basedir}/java</directory>
									<includes>
										<include>**/*.java</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
 			-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.build.sourceDirectory}/net/sf/jabref/search</directory>
							<includes>
								<include>SearchExpressionLexer*.*</include>
								<include>SearchExpressionParser*.*</include>
								<include>SearchExpressionTreeParser*.*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					    
						<!-- Remove files generated by ANTLRv3 for BST parsing. -->
						<fileset>
							<directory>${project.build.sourceDirectory}/net/sf/jabref/bst</directory>
							<includes>
								<include>BstLexer*.java</include>
								<include>BstParser*.java</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>${project.build.sourceDirectory}</directory>
							<includes>
								<include>Bst.tokens</include>
							</includes>
						</fileset>

						<!-- Remove files generated by JPFCodeGen -->
						<fileset>
							<directory>${project.basedir}/java</directory>
						</fileset>
						<fileset>
							<directory>${project.build.sourceDirectory}/net/sf/jabref/plugin/core/generated</directory>
						</fileset>
						<fileset>
							<directory>${project.basedir}</directory>
							<includes>
								<include>velocity.log</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>net.sf.jabref.JabRef</mainClass>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.2.1,)</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>antlr3-maven-plugin</artifactId>
										<versionRange>[1.1-SNAPSHOT,)</versionRange>
										<goals>
											<goal>antlr</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
